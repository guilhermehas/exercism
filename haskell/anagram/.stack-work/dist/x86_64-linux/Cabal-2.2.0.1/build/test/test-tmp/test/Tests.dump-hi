
==================== FINAL INTERFACE ====================
2019-01-12 04:42:59.305306507 UTC

interface main:Main 8043
  interface hash: 5ba28996234b6863251aa2fdfa1100f4
  ABI hash: 5ca2d89a74fdcad368512de7bcb98775
  export-list hash: 5ebd1c1f9ffef09533094bb489a22452
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1112a7f9467054741c0cbe735a99fd58
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3
                      anagram-1.4.0.8 ansi-terminal-0.8.0.4 array-0.5.2.0 base-4.11.1.0
                      call-stack-0.1.0 clock-0.7.2 colour-2.3.4 containers-0.5.11.0
                      deepseq-1.4.3.0 directory-1.3.1.5 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hspec-2.5.5 hspec-core-2.5.5
                      hspec-expectations-0.8.2 integer-gmp-1.0.2.0 pretty-1.1.3.6
                      primitive-0.6.3.0 quickcheck-io-0.2.0 random-1.1 setenv-0.1.1.3
                      stm-2.4.5.0 template-haskell-2.13.0.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.5.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.5.0:Control.Monad.STM base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  anagram-1.4.0.8:Anagram c4ac459236e4ef6bd843088b129b02fa
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Exts 7199528d266b07eb217e45473fc18c9d
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hspec-2.5.5:Test.Hspec 2be16cf670d31c941cf3c2e9020b9f19
import  -/  hspec-2.5.5:Test.Hspec.Runner fc3975763ef747ba5b312af6c0fa997c
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Config.Options 46e8473cd69d1d02b94a5aff383c0b5a
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Runner 05e438b360ed244fedd330a757c1204b
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec c05383235153ad38308e55e581976171
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad eabb239f4fb08d8c7ff65e7e9206738b
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 713f0c8581412c4b3ae306dbada3ec4b
8f470deca0048d02e6fc8121ab8abb17
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8197111133229858407##
                   13847006553897280588##
                   Main.$trModule
                   Main.$tc'Case2
                   0#
                   Main.$tc'Case1) -}
6fc21dd8b35ae7df9abfcd56a3c1f8ad
  $tc'Case1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0c0299238ee13fbc2e14231d59357ec9
  $tc'Case2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Case3) -}
b70b9a2f50a01b383c0fc203a93b45f6
  $tc'Case3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Case"#) -}
9f9427b68a1c0df6b95c3a3d566064e4
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   990021888930651814##
                   4262142848388084561##
                   Main.$trModule
                   Main.$tcCase1
                   0#
                   GHC.Types.krep$*) -}
b0dff1fba9a2e1fbd8ccfcfdc7bfd5cc
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCase2) -}
7179be3aa9b5f07778c569f16b1ed2bf
  $tcCase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Case"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
c6f30cd654a52559db92b7ddd9e72ffe
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> [GHC.Base.String]
    -> [GHC.Base.String]
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 6,
     Strictness: <L,1*U><L,U><L,U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: [GHC.Base.String])
                   (ww3 :: [GHC.Base.String])
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                           <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                           <GHC.Types.IO>_R
                           <()>_N ; GHC.Types.N:IO[0]
                                        <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R)
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             (Test.Hspec.Core.Tree.Item
                                @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                                (case ww of wild {
                                   []
                                   -> case Main.main48 of wild1 {
                                        GHC.Base.Nothing -> Test.Hspec.Core.Tree.specItem1
                                        GHC.Base.Just v -> v }
                                   : ds2 ds3 -> wild })
                                Main.main38
                                (GHC.Base.Nothing @ GHC.Types.Bool)
                                (Test.Hspec.Core.Example.safeEvaluateExample1
                                   @ Test.Hspec.Expectations.Expectation
                                   Test.Hspec.Core.Example.$fExampleIO1
                                     `cast`
                                   ((<Test.Hspec.Expectations.Expectation>_R
                                     ->_R <Test.Hspec.Core.Example.Params>_R
                                     ->_R <(Test.Hspec.Core.Example.Arg
                                              Test.Hspec.Expectations.Expectation
                                            -> GHC.Types.IO ())
                                           -> GHC.Types.IO ()>_R
                                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                                   (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    case Test.Hspec.Expectations.Matcher.matchList
                                           @ [GHC.Types.Char]
                                           GHC.Show.$fShow[]_$s$fShow[]1
                                           GHC.Classes.$fEq[]_$s$fEq[]1
                                           (Anagram.anagramsFor ww1 ww2)
                                           ww3 of wild {
                                      GHC.Base.Nothing -> (# eta2, GHC.Tuple.() #)
                                      GHC.Base.Just x
                                      -> case Test.HUnit.Lang.assertEqual_go x of wild1 { () ->
                                         Test.Hspec.Expectations.shouldMatchList2
                                           Main.main28
                                             `cast`
                                           (Sym (GHC.Classes.N:IP[0]
                                                     <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                           x
                                           eta2 } })
                                     `cast`
                                   (Sym (GHC.Types.N:IO[0] <()>_R)))
                                  `cast`
                                (<Test.Hspec.Core.Example.Params>_R
                                 ->_R <Test.Hspec.Core.Example.ActionWith
                                         (Test.Hspec.Core.Example.Arg
                                            Test.Hspec.Expectations.Expectation)
                                       -> GHC.Types.IO ()>_R
                                 ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))))
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
d1313b7ef88c6603bf2805b2eb97f481
  data Case
    = Case {description :: GHC.Base.String,
            subject :: GHC.Base.String,
            candidates :: [GHC.Base.String],
            expected :: [GHC.Base.String]}
d1313b7ef88c6603bf2805b2eb97f481
  candidates :: Main.Case -> [GHC.Base.String]
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds3 }) -}
d1313b7ef88c6603bf2805b2eb97f481
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds1 }) -}
d1313b7ef88c6603bf2805b2eb97f481
  expected :: Main.Case -> [GHC.Base.String]
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds4 }) -}
ba841cdc23cbeeae1e4d67bbaf5caed0
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
fbc6012092d867a2eccafd32e1a2af92
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main187
                        Main.main2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
15273d232250038ba90f787f69a9be00
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main87
                   Main.main85
                   Main.main83
                   Main.main80
                   Main.main11
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
94da45353fed0bf841fe67f77984a014
  main100 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main101
                   (GHC.Types.[] @ GHC.Base.String)) -}
c949d47bed0d88361e9b7964fad83fc3
  main101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main102) -}
98a0a0535b29b789761ab07f664870fb
  main102 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("largely"#) -}
5157dfadcf4bb1c2c0c071f55aded20d
  main103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main104) -}
8c1e427eae9ee5efd5b00b8143414be1
  main104 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("regally"#) -}
8bb33991da7ea112d57a7e3cd7901b5d
  main105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main106) -}
082ad27b592b5b9bb003b07d7dbf8bd2
  main106 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("gallery"#) -}
c820b705c96da23ec980b308b4516048
  main107 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main105
                   Main.main108) -}
f7f406590eeee5f1a6a8a2ce2cc2ba80
  main108 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main117
                   Main.main109) -}
e62621ad263ede1d65cc219f6824b01d
  main109 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main103
                   Main.main110) -}
93559c6bf16cdc35b3ce72c752446d80
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main78
                   Main.main76
                   Main.main69
                   Main.main66
                   Main.main12
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
abecef9d2648bf409dc5019cf3683684
  main110 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main115
                   Main.main111) -}
ba7fa5fcac223a24e7b0d92dedbe67ba
  main111 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main101
                   Main.main112) -}
2359a089bdb7493bb570916c0f0af367
  main112 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main113
                   (GHC.Types.[] @ GHC.Base.String)) -}
9e72c82b007dbb1fb5f1360b0e82c721
  main113 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main114) -}
32c83cb83c2be45e9bd21945482dc199
  main114 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("leading"#) -}
b7d5ec0425b2baf9007d81700d378cd6
  main115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main116) -}
d8e2c24d8f112d7a8b3a11f887514a6e
  main116 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("clergy"#) -}
d0406eb7ef93862f7a0b200d7fb1f8e5
  main117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main118) -}
274d6468a98e36996a9855993c8aa026
  main118 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ballerina"#) -}
a3b56b18764fa0b0c2047537c83450d3
  main119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main120) -}
55b3e19dfebb4a653160cc883eac6755
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main64
                   Main.main62
                   Main.main59
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main13
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
3bb8399765a89946f3b00c496916f3d4
  main120 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("allergy"#) -}
6f3f7fac894fb4d443536359ac6ddfa1
  main121 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main122) -}
89d359286312b43857bda3559db9139c
  main122 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("detects three anagrams"#) -}
c29dca40aeb16eb2837ca539e69afc8f
  main123 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main124
                   (GHC.Types.[] @ GHC.Base.String)) -}
16d67bc161560629a2d4cdc8ded3c657
  main124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main125) -}
0a9ede9a9634a2bb5f177c243fe3a07f
  main125 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("inlets"#) -}
565749ea8258c554e88f1fe469adb52a
  main126 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main131
                   Main.main127) -}
1cd124133fad91f48e2884430cdbd000
  main127 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main129
                   Main.main128) -}
2c1c468a63263824eb5e3c8dea333383
  main128 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main124
                   Main.main19) -}
aa08cba90519aef0948579e51cdb8118
  main129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main130) -}
aa2cbcca8b0aadc3adec4f11937b7062
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main57
                   Main.main55
                   Main.main52
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main14
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
cc9913918cdfc8c40ab7d14301992f2c
  main130 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("google"#) -}
a416f1b81a3da1bac1591dedefa6cc83
  main131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main132) -}
a65bfba3be99a5ec8081f3c1707b1005
  main132 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("enlists"#) -}
936e2768bbf5bbfa28eedcf58c6d98d2
  main133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main134) -}
a5690a07b7b3d0d7b8df46025b547dfa
  main134 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("listen"#) -}
c96b93217f718e591d03903783e2f420
  main135 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main136) -}
b8ebe03cf199e55b9712104f878490a2
  main136 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("detects anagram"#) -}
fe13830fd0b1d5d67e80edcefb53b9a1
  main137 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main141
                   Main.main138) -}
607f4e49e70240f314b7842b156f4a7f
  main138 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main139
                   (GHC.Types.[] @ GHC.Base.String)) -}
a5ef96a763e33fc99fe08a9e1fe22557
  main139 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main140) -}
de5778dc4af5395d2921b5ef542e9693
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main26
                   Main.main24
                   Main.main17
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main15
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
ccefb9db2e64184612d9fc90968f3d75
  main140 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("goody"#) -}
4f494c9b580a1f15554eccbea0c32ac8
  main141 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main142) -}
2ea42db7c8152364623439755fbec037
  main142 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dog"#) -}
8fd3f7f9c61e33a48cae3a41e47f26c3
  main143 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main144) -}
ca15fc15be02dc416531453d769c40a7
  main144 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("good"#) -}
9b716ef99eae277e2c6316f91a60a535
  main145 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main146) -}
3448c50603c3f065b2fa42e3d00338d5
  main146 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("does not detect anagram subsets"#) -}
7a694fad8a01979be2f2baba33c1e1f8
  main147 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main151
                   Main.main148) -}
bcd0fa7a1f730bc83c49e23c467b986d
  main148 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main149
                   (GHC.Types.[] @ GHC.Base.String)) -}
acfa89c768eec924134bc087bc053d4e
  main149 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main150) -}
4d611b1e88b04d3119fb50393208ac21
  main15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main16 #)) -}
09465bc76965f663af69bb893667f354
  main150 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("maters"#) -}
801c0b333c664bd34b6f8cb9c559cfed
  main151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main152) -}
8bf9b029dffa5d7ff7eaa72d2d5bd29d
  main152 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("stream"#) -}
6669546b0a343daec2091cf9e1664f28
  main153 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main151
                   Main.main154) -}
580098cffeb2e1dd62f6e067b32d3731
  main154 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main155
                   Main.main148) -}
5752920f40c83367b4daf4e30f81201d
  main155 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main156) -}
111207343c3a0c1808f1491c80e6b5c0
  main156 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pigeon"#) -}
8de73025f2eb4f8a1da71c9a4ab58280
  main157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main158) -}
4bc59ae5d09a86789399bebf95ddb4e1
  main158 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("master"#) -}
97912470854f9dcbe1e152fdac06f166
  main159 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main160) -}
d593d66aaf7881eba969b2727c30237e
  main16 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
759d4928669141056b82e5db9551d47d
  main160 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("detects two anagrams"#) -}
f41f3c26be65e04e64ac5122c4daf5c0
  main161 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main171
                   Main.main162) -}
83c7ba6a33c28d33e71254596b59cbe5
  main162 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main169
                   Main.main163) -}
42fad984bb90e142f67b4a015a0cb38f
  main163 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main167
                   Main.main164) -}
e80b734242ae986b3823d688916d7e5f
  main164 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main165
                   (GHC.Types.[] @ GHC.Base.String)) -}
fe65a51990ec81e60abf7e51fa39dec2
  main165 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main166) -}
6b86a196ac82939df7916b34b2950eb1
  main166 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pants"#) -}
4c56b18fa4b9a69acc0d7d0ca3713b2f
  main167 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main168) -}
2baf737de032739cadd5ae8abc4aca54
  main168 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("zombies"#) -}
9d2d3840181538bcb4507cbdbc73b091
  main169 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main170) -}
787ecbc748b700750b95e1501cc6bece
  main17 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main24
                   Main.main18) -}
e756669fbccb3c59ce52e32c8ed91dc7
  main170 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("world"#) -}
ff390fd41c58503f54ecae07bb601350
  main171 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main172) -}
95adde8a0f06044b07d2385592d3ca5b
  main172 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hello"#) -}
2aa248afc681640c3b94ca97257eef0d
  main173 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main174) -}
950a5b07da55e2661acbf6696f810079
  main174 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("diaper"#) -}
9bd6d019e6aebf7bdf44c5a3a75a9928
  main175 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main176) -}
9c62ac1db317a3e7afee9d0001e1aa79
  main176 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("no matches"#) -}
79b8c3daf3e2d4f03a3571d4a423c618
  main177 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main178) -}
d80f8d8db74dcd64aaeec357c94be6c7
  main178 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("anagramsFor"#) -}
fd443f2046526cf353653d21494fbf36
  main179 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main180
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
74da350add721fac19212db270b9f228
  main18 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main22
                   Main.main19) -}
78c72ae5697ebb814a7f6f3f9f04aa6a
  main180 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main185
                   Main.main181
                   GHC.Stack.Types.EmptyCallStack) -}
33f957a1a56fd8e6523b6cda13551c49
  main181 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main33
                   Main.main184
                   Main.main183
                   Main.main184
                   Main.main182) -}
e93fe0ff5de47c1ee53c0320b7e0e3f5
  main182 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 31#) -}
a180c73fd43964a0042dfd638a0dca82
  main183 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
5669c9302a2ed965cc2c0ee6f670e9f1
  main184 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
b8266b57f5076fa1980ae7b9e4c425d3
  main185 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main186) -}
dd6aef02687ab531f7fefd8a0d6d649e
  main186 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
fbe5ab02418acd44b2ce0143c9708c6e
  main187 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
22ca154e7b82ccb59055cd0ea5498553
  main188 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
2da38544002bf16e88bfc85fe22caacc
  main19 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main20
                   (GHC.Types.[] @ GHC.Base.String)) -}
6072de2057cb7a8ed3c66fac674a5998
  main2 :: Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Main.main179
                   Main.main177
                   Main.main3
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                       <GHC.Types.IO>_R
                                                       <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N) <()>_N))) -}
36c8c9b11ca9053e571a8fdf5031d834
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main21) -}
e1dddd8aa92c5eb9ce5e58f3422b4fb3
  main21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("banana"#) -}
c6d8258c99eb010a9b47fde11cdaf324
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main23) -}
69d47dad48a94bd33418b9eb41c67be0
  main23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Banana"#) -}
9fa7b26cd19f7bdaae3b4b8b2a597f97
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main25) -}
7fca122bb93d1a5d4514417a2d31469d
  main25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BANANA"#) -}
9f98c456a732d49b3c6a633d0f8ed1d0
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main27) -}
1ff49a5b7a050ac20ac14f39531fe7fd
  main27 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("words are not anagrams of themselves (case-insensitive)"#) -}
d0213bc4cdf6d834b4d826059ee6b391
  main28 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main_fn
                   Main.main29
                   GHC.Stack.Types.EmptyCallStack) -}
fd768485da545079ef0ff4f42caf96c6
  main29 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main33
                   Main.main32
                   Main.main31
                   Main.main32
                   Main.main30) -}
29d60d7f4681eb7c71c21409b8da2ba7
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wc
                   Main.main175
                   Main.main173
                   Main.main161
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main4
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
f306e103617aebd8a85e33b35113dc17
  main30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 75#) -}
08818acb174c284f3cc68ccd3db61753
  main31 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 38#) -}
921dbee6744a4de9eab9a97bb3086462
  main32 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
ef84d14e350d2f0ffdaf219409ac1502
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main34) -}
434364a4d1bf9d76818c6d19d615481b
  main34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
cd0e5068354a83fae50e3c8647e37a91
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
0d890282ea9a1b8517f715606fa34ac4
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
b1a4fa6e71253595b713f909ddc3e2cf
  main37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shouldMatchList"#) -}
26a0e350221e27f349bb2ad99c0b8db3
  main38 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main39) -}
c329df99dbc3260bd94d55fcbf138648
  main39 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main40) -}
9161e7b1b6069a0826143ec0b47345e8
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main159
                   Main.main157
                   Main.main153
                   Main.main147
                   Main.main5
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
c8744225930933b2e903f5d36bdb9d44
  main40 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main41) -}
21517a763875e803c155f5f094a88661
  main41 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main42) -}
06c224478619762c6e0ae39d40b02fdf
  main42 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main43
                   GHC.Stack.Types.EmptyCallStack) -}
c19d051cbd4d3aad5ecedf499ce266b8
  main43 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main33
                   Main.main32
                   Main.main45
                   Main.main32
                   Main.main44) -}
aebb7aa9f05235da16702b5dafbaeb1c
  main44 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 35#) -}
e35a69dc43c27267765eca394d66b45a
  main45 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
09b2557b0a48a777548a1944e86b52d4
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main47) -}
b0ffd8e3a5e3e3b549202ed7c502bcdb
  main47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
cdb9e40039ee073d0bbc7f569a11c028
  main48 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (Test.Hspec.Core.Tree.specGroup19 Main.main49) -}
99288a91f4628835d72aa4585856222d
  main49 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.specGroup15
                   Main.main50) -}
15cfa271528c09e6597891076439944f
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main145
                   Main.main143
                   Main.main137
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main6
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
93bfddd8a8825d558f890310b2035194
  main50 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specGroup13
                   Test.Hspec.Core.Tree.specItem9
                   Main.main51) -}
1d181c1b92a3fd5965ad56fba916c5ac
  main51 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem7
                   Test.Hspec.Core.Tree.specItem3
                   Main.main41) -}
e21ede87d19c5e8ac8bcdfeec377feba
  main52 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main53
                   (GHC.Types.[] @ GHC.Base.String)) -}
a09f74bbc7b219a85530ecdaba6af9dc
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main54) -}
550f6f2fe77ef2411d12d9c31206c3f8
  main54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("patter"#) -}
b76aadb89bb54c2d24417a12aaa0ff10
  main55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main56) -}
bcb1f27141bcf69f97a4c9b69b507e43
  main56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("tapper"#) -}
f7264e28e3e7b282bfb65c7bd4595dd8
  main57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main58) -}
ea23ea1ddf9becebb942594e4913ef93
  main58 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("anagrams must use all letters exactly once"#) -}
52fc6c0825df6117bae24e067c7fdff6
  main59 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main60
                   (GHC.Types.[] @ GHC.Base.String)) -}
c371594f172b6031487db5ce4572361e
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main135
                   Main.main133
                   Main.main126
                   Main.main123
                   Main.main7
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
99d34c3b726927bf9ce19b15fd519b02
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main61) -}
6c114ac6583800a4f17c886f5fc41bc7
  main61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("go Go GO"#) -}
80f965e0a2cc6b20dd273e29af689366
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main63) -}
890ecbe63c91f08df32825f96e2004f9
  main63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("go"#) -}
cbb8a46d94358bcefd70af236d909e6e
  main64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main65) -}
ea90e7aebc4b831ed2e34b362c4bef35
  main65 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("does not detect a anagram if the original word is repeated"#) -}
3f435ead77f1590fd9823663f140d7e7
  main66 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main67
                   (GHC.Types.[] @ GHC.Base.String)) -}
3bbb9ed5c0bc9909a011cb5ad785fe84
  main67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main68) -}
8f3ca59159a3ec66ccd6fe2ac71d293c
  main68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Carthorse"#) -}
7cb510c200c1f441219c4a142ae29c05
  main69 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main74
                   Main.main70) -}
431778ca928148f9d9966c2d3d17b255
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main121
                   Main.main119
                   Main.main107
                   Main.main98
                   Main.main8
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
b40cf0bcbd04a33b3ded7069ca43aa0a
  main70 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main67
                   Main.main71) -}
4b910d79a1328a569e9b6511f79c0f19
  main71 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main72
                   (GHC.Types.[] @ GHC.Base.String)) -}
552c3d07eac6fdcf779336fbc34f0123
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main73) -}
1144cb00b90cbdaee102671fd6c6e556
  main73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("radishes"#) -}
8a9a2fbd871a69a4c54e08c1abbc4025
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main75) -}
6749891a0b1fac0cef95513390999b2a
  main75 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cashregister"#) -}
b005ad4a8727caa7eca3a376bfc7f194
  main76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main77) -}
39e6b7f9e82007fbab3c6382a26ddea4
  main77 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("orchestra"#) -}
022f795f368ce891334edb5261d28eaa
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main79) -}
8ea6db1883453147be23211ccf6b2666
  main79 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("detects anagrams using case-insensitive possible matches"#) -}
e04df041ac0dcb359aa4d881ad6eb306
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main96
                   Main.main94
                   Main.main91
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main9
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
448eebadfacfc3842295e62624c11911
  main80 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main81
                   (GHC.Types.[] @ GHC.Base.String)) -}
85be3e46e98845d52c0f66e30f5cd9d1
  main81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main82) -}
c6ecc1d6a915ac5fad11a167c5de6d17
  main82 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("carthorse"#) -}
78caa1dda90220ed453eaf9227707bd0
  main83 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main74
                   Main.main84) -}
8c7dd2d23ec7095ecf942aec84fdf5f5
  main84 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main81
                   Main.main71) -}
3082ec57f5679eac87b2e9465d1c9fed
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main86) -}
d4c746cb0521528f54686dda4c2f4366
  main86 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Orchestra"#) -}
12cfe9b2b763c53e9fb97405080cd6dc
  main87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main88) -}
7b4a131aba04d096927b494ed2afc046
  main88 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("detects anagrams using case-insensitive subject"#) -}
5216a8515ba6638756ff7c9a713565a7
  main89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main90) -}
ddaa417cfb787ae4e674048fb1e25bd6
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main89
                   Main.main85
                   Main.main69
                   Main.main66
                   Main.main10
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
79a67da272f0bf7965a483818f55a793
  main90 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("detects anagrams case-insensitively"#) -}
b28afee9311f2c11f896718158a123d9
  main91 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main92
                   (GHC.Types.[] @ GHC.Base.String)) -}
5c3a695f9e6c4414da608561aeebeec6
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main93) -}
bbdd822b2b291c14f08b9b3d8900283f
  main93 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("last"#) -}
d910c1363c018e50e9c4d5c2f67b3da4
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main95) -}
761029903b079905880071f13c5779fa
  main95 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("mass"#) -}
3fa70e290f036e2986260491b10899ec
  main96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main97) -}
4d32e2943353b2ed9b901c3441b1f71f
  main97 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("does not detect non-anagrams with identical checksum"#) -}
135360033c8fc71fc1fc549404a8a2e3
  main98 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main105
                   Main.main99) -}
5954f0e97c44cd4a7fbd3e32255ca67b
  main99 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main103
                   Main.main100) -}
50f256697424bb8f90606143585ee880
  main_fn :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main37) -}
d1313b7ef88c6603bf2805b2eb97f481
  subject :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

