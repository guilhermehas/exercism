
==================== FINAL INTERFACE ====================
2019-01-20 03:33:35.123816741 UTC

interface main:Main 8043
  interface hash: ac6f1892d6f7db339c40c331f89b13c4
  ABI hash: 6fa29fdffd3a53cc1d6e78ca11373343
  export-list hash: 0f550f6c602937ba3e81e59a3265ff54
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1112a7f9467054741c0cbe735a99fd58
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3
                      ansi-terminal-0.8.0.4 array-0.5.2.0 atbash-cipher-1.2.0.6
                      base-4.11.1.0 call-stack-0.1.0 clock-0.7.2 colour-2.3.4
                      containers-0.5.11.0 deepseq-1.4.3.0 directory-1.3.1.5
                      filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hspec-2.5.5
                      hspec-core-2.5.5 hspec-expectations-0.8.2 integer-gmp-1.0.2.0
                      pretty-1.1.3.6 primitive-0.6.3.0 quickcheck-io-0.2.0 random-1.1
                      setenv-0.1.1.3 split-0.2.3.3 stm-2.4.5.0 template-haskell-2.13.0.0
                      tf-random-0.5 time-1.8.0.2 transformers-0.5.5.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.5.0:Control.Monad.STM base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  atbash-cipher-1.2.0.6:Atbash 006be4ee8217bf89e487bf944299848a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hspec-2.5.5:Test.Hspec 2be16cf670d31c941cf3c2e9020b9f19
import  -/  hspec-2.5.5:Test.Hspec.Runner fc3975763ef747ba5b312af6c0fa997c
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Config.Options 46e8473cd69d1d02b94a5aff383c0b5a
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Runner 05e438b360ed244fedd330a757c1204b
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec c05383235153ad38308e55e581976171
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad eabb239f4fb08d8c7ff65e7e9206738b
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 713f0c8581412c4b3ae306dbada3ec4b
8f470deca0048d02e6fc8121ab8abb17
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8197111133229858407##
                   13847006553897280588##
                   Main.$trModule
                   Main.$tc'Case2
                   0#
                   Main.$tc'Case1) -}
6fc21dd8b35ae7df9abfcd56a3c1f8ad
  $tc'Case1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0c0299238ee13fbc2e14231d59357ec9
  $tc'Case2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Case3) -}
b70b9a2f50a01b383c0fc203a93b45f6
  $tc'Case3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Case"#) -}
9f9427b68a1c0df6b95c3a3d566064e4
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   990021888930651814##
                   4262142848388084561##
                   Main.$trModule
                   Main.$tcCase1
                   0#
                   GHC.Types.krep$*) -}
b0dff1fba9a2e1fbd8ccfcfdc7bfd5cc
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCase2) -}
7179be3aa9b5f07778c569f16b1ed2bf
  $tcCase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Case"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
8d38d60290edb233d66c6b8f6d62213e
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 5,
     Strictness: <L,1*U><L,U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                           <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                           <GHC.Types.IO>_R
                           <()>_N ; GHC.Types.N:IO[0]
                                        <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R)
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             (Test.Hspec.Core.Tree.Item
                                @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                                (case ww of wild {
                                   []
                                   -> case Main.main40 of wild1 {
                                        GHC.Base.Nothing -> Test.Hspec.Core.Tree.specItem1
                                        GHC.Base.Just v -> v }
                                   : ds2 ds3 -> wild })
                                Main.main30
                                (GHC.Base.Nothing @ GHC.Types.Bool)
                                (Test.Hspec.Core.Example.safeEvaluateExample1
                                   @ Test.Hspec.Expectations.Expectation
                                   Test.Hspec.Core.Example.$fExampleIO1
                                     `cast`
                                   ((<Test.Hspec.Expectations.Expectation>_R
                                     ->_R <Test.Hspec.Core.Example.Params>_R
                                     ->_R <(Test.Hspec.Core.Example.Arg
                                              Test.Hspec.Expectations.Expectation
                                            -> GHC.Types.IO ())
                                           -> GHC.Types.IO ()>_R
                                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                                   (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    Test.HUnit.Lang.assertEqual1
                                      @ GHC.Base.String
                                      Main.main17
                                        `cast`
                                      (Sym (GHC.Classes.N:IP[0]
                                                <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                      GHC.Classes.$fEq[]_$s$fEq[]1
                                      GHC.Show.$fShow[]_$s$fShow[]1
                                      (GHC.Types.[] @ GHC.Types.Char)
                                      ww2
                                      (Atbash.decode_go ww1)
                                      eta2)
                                     `cast`
                                   (Sym (GHC.Types.N:IO[0] <()>_R)))
                                  `cast`
                                (<Test.Hspec.Core.Example.Params>_R
                                 ->_R <Test.Hspec.Core.Example.ActionWith
                                         (Test.Hspec.Core.Example.Arg
                                            Test.Hspec.Expectations.Expectation)
                                       -> GHC.Types.IO ()>_R
                                 ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))))
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
2d1a62a3f1687d9c8665d12c9a94a4ab
  $wc1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 5,
     Strictness: <L,1*U><L,U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                           <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                           <GHC.Types.IO>_R
                           <()>_N ; GHC.Types.N:IO[0]
                                        <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R)
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             (Test.Hspec.Core.Tree.Item
                                @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                                (case ww of wild {
                                   []
                                   -> case Main.main40 of wild1 {
                                        GHC.Base.Nothing -> Test.Hspec.Core.Tree.specItem1
                                        GHC.Base.Just v -> v }
                                   : ds2 ds3 -> wild })
                                Main.main30
                                (GHC.Base.Nothing @ GHC.Types.Bool)
                                (Test.Hspec.Core.Example.safeEvaluateExample1
                                   @ Test.Hspec.Expectations.Expectation
                                   Test.Hspec.Core.Example.$fExampleIO1
                                     `cast`
                                   ((<Test.Hspec.Expectations.Expectation>_R
                                     ->_R <Test.Hspec.Core.Example.Params>_R
                                     ->_R <(Test.Hspec.Core.Example.Arg
                                              Test.Hspec.Expectations.Expectation
                                            -> GHC.Types.IO ())
                                           -> GHC.Types.IO ()>_R
                                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                                   (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    Test.HUnit.Lang.assertEqual1
                                      @ GHC.Base.String
                                      Main.main17
                                        `cast`
                                      (Sym (GHC.Classes.N:IP[0]
                                                <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                      GHC.Classes.$fEq[]_$s$fEq[]1
                                      GHC.Show.$fShow[]_$s$fShow[]1
                                      (GHC.Types.[] @ GHC.Types.Char)
                                      ww2
                                      (Atbash.encode ww1)
                                      eta2)
                                     `cast`
                                   (Sym (GHC.Types.N:IO[0] <()>_R)))
                                  `cast`
                                (<Test.Hspec.Core.Example.Params>_R
                                 ->_R <Test.Hspec.Core.Example.ActionWith
                                         (Test.Hspec.Core.Example.Arg
                                            Test.Hspec.Expectations.Expectation)
                                       -> GHC.Types.IO ()>_R
                                 ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))))
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
f75834b2ff871c4af8aced19101ccd0e
  data Case
    = Case {description :: GHC.Base.String,
            phrase :: GHC.Base.String,
            expected :: GHC.Base.String}
f75834b2ff871c4af8aced19101ccd0e
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
f75834b2ff871c4af8aced19101ccd0e
  expected :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
6d1a0658e85464cd84729ad35b715916
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
295365cb75306cdd0342938ca12b79be
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main136
                        Main.main2
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <((),
                                    [Test.Hspec.Core.Tree.SpecTree
                                       ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                            <GHC.Types.IO>_R
                                                            <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                               <()>_N) <()>_N))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
eac715d1713aceb3ad5bf92de9b4ce82
  main10 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
b3863b3084d51366368f5bc91dc69c72
  main100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main101) -}
c2e5d28cd196aac49613e5e532a34608
  main101 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode numbers"#) -}
da06a928d24e5b0a301f5bddc40b26ff
  main102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main103) -}
1ba99480fb0b5f4035d76f671a0d85f9
  main103 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nrmwy oldrm tob"#) -}
17d58d349c55adac94ee9d42f083bb00
  main104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main105) -}
2662f45640cdf5d7f66f096bc42cb953
  main105 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("mindblowingly"#) -}
2b4b9b2266fa2d8db4a28bdc31e2ddb1
  main106 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main107) -}
4a69a3c438e4aefb2ef4db9a99911aa5
  main107 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode mindblowingly"#) -}
75611a2ef29290f97bb1aa1030451d93
  main108 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main109) -}
fc7c37698854d78e1fe421928a9bb3dc
  main109 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("lnt"#) -}
8bd3b6d75adbb5ce6227f8f337a026cc
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main12) -}
c4ff486da121e052ad62061f12af6fb8
  main110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main111) -}
e8fc9921c720397d0a76315fd8b8b753
  main111 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("O M G"#) -}
d8580714faa474a4f8089705ffebfde8
  main112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main113) -}
c936652f2bd0cb2654160855bed29d10
  main113 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode spaces"#) -}
050197923017ac9746bc5a3a05959425
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main115) -}
8c5ee17138c7e0c8f148f959ff53201e
  main115 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OMG"#) -}
0169ababe67ac9e2dd478c12ac606db4
  main116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main117) -}
4a8871eafb5b4cab81c9dd170331d2ff
  main117 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode OMG"#) -}
fd022b6ccb18efacb208257746ed3072
  main118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main119) -}
bf0aebd4537b8225b0a1ea11cdb40520
  main119 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ml"#) -}
634438f4977619144bbea60186c6128b
  main12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("anobstacleisoftenasteppingstone"#) -}
e68c403dcc937f764410234436e1a0b0
  main120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main121) -}
46034eabe267d273553505a5e571cd9f
  main121 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("no"#) -}
7deae9643f68240ef98a22dde0ad033d
  main122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main123) -}
7c2ceb7ad2ed6be90ff9f06858c4ee1c
  main123 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode no"#) -}
0a856fa0026d900796f08d535f2cda64
  main124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main125) -}
6e89d221032df64cf0669358040cb8f5
  main125 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bvh"#) -}
a3b7f907494c62f04631f972d54f8f47
  main126 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main127) -}
4944887bafcbba94d341d1b7e8492be3
  main127 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("yes"#) -}
896e0e333d18b8a7c03ebf7ab7a5d689
  main128 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main129) -}
66e070a78e6089735cf12cde98ebc721
  main129 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode yes"#) -}
4e73168bd34b5c291968e2bfb13f28e8
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main14) -}
f1378b21f22c45d34821683a534d2ffb
  main130 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main131) -}
398c94a0a7299fb03034dea82519c306
  main131 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode"#) -}
15dfb84dc61ea43bde5ed973c26f58d0
  main132 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main133
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
275e44bca0fdcdc2242cee57dd1cf5a4
  main133 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main78
                   Main.main134
                   GHC.Stack.Types.EmptyCallStack) -}
44906061ec93b2c4f54c813d697fe361
  main134 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main27
                   Main.main26
                   Main.main24
                   Main.main135
                   Main.main76
                   Main.main135
                   Main.main75) -}
caf109724176b7dd2be250757ab8ce69
  main135 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
a3496f430e7ced3a6d81475193f32dc7
  main136 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
de9de595b84cf9ef1d0a77931190976a
  main137 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
584ae657394995c3b6e74de8417c75b0
  main14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("zmlyhgzxovrhlugvmzhgvkkrmthglmv"#) -}
fb2c44f860e69c44ff4e4056d5ad6eb8
  main15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main16) -}
3f4a3e48386a6b028d9165be21dc1214
  main16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("decode with no spaces"#) -}
e82deba600db13daf82b0f989f620598
  main17 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?6
                   Test.HUnit.Base.@?=2
                   Main.main18) -}
cac36e537a2ebc5929d95e128c9df5fa
  main18 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe6
                   Test.Hspec.Expectations.shouldBe2
                   Main.main19) -}
d766df9d71120b8a5f4a273c8d0923e2
  main19 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main28
                   Main.main20
                   GHC.Stack.Types.EmptyCallStack) -}
67cfc5671855e4de6a387244e4cce358
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Main.main132
                         Main.main130
                         Main.main80
                           `cast`
                         (Sym (GHC.Types.N:IO[0]
                                   <((),
                                     [Test.Hspec.Core.Tree.SpecTree
                                        ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                             <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                             <GHC.Types.IO>_R
                                                             <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                                <()>_N) <()>_N)))
                        `cast`
                      (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                           <()>_N <()>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                <GHC.Types.IO>_R
                                                <()>_N ; GHC.Types.N:IO[0]
                                                             <((),
                                                               [Test.Hspec.Core.Tree.SpecTree
                                                                  ()])>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Main.main72
                         Main.main70
                         Main.main3
                           `cast`
                         (Sym (GHC.Types.N:IO[0]
                                   <((),
                                     [Test.Hspec.Core.Tree.SpecTree
                                        ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                             <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                             <GHC.Types.IO>_R
                                                             <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                                <()>_N) <()>_N)))
                        `cast`
                      (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                           <()>_N <()>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                <GHC.Types.IO>_R
                                                <()>_N ; GHC.Types.N:IO[0]
                                                             <((),
                                                               [Test.Hspec.Core.Tree.SpecTree
                                                                  ()])>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild { (,) b1 w' -> b1 },
                     case ipv1 of wild { (,) a1 w2 ->
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       w2
                       (case ipv3 of wild1 { (,) b1 w' -> w' }) }) #) } }) -}
20feb78aebfe0faea0f8421653fd292e
  main20 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main27
                   Main.main26
                   Main.main24
                   Main.main23
                   Main.main22
                   Main.main23
                   Main.main21) -}
efa8037d8099f2be9e4bbcf32af98ed6
  main21 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 68#) -}
16855acefcb6c81b6715c471c9151734
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 40#) -}
78a8360b34d8591e95fd3e13a72eaa31
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
cde321e97da9108088b449f849479276
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main25) -}
21ce69b3fef89c8e7f520fd4fe6310d2
  main25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
72fb85c3b6ab099fc9673ff89888a7ad
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
9a494e6edbff163ce512cfa9072fed36
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
dbe84a701bac37fcec8041edaf9d4292
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main29) -}
56891420137120672cc2bda549439d09
  main29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shouldBe"#) -}
e2a5b18b850cb5eceb5177d2610c89e3
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wc
                   Main.main68
                   Main.main66
                   Main.main44
                   Main.main4
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
6aab1bbda1204c4e7a2c69fe734c9345
  main30 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main31) -}
7b33779a04c5bf6d54bf5d8ab88acef5
  main31 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main32) -}
b63125dbbbff785e72f892ade8ef493e
  main32 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main33) -}
d34a8817e75a1d7cf545b8b90188d181
  main33 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main34) -}
ed755bd5a62fd29bca349a7fe3a73ab9
  main34 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main38
                   Main.main35
                   GHC.Stack.Types.EmptyCallStack) -}
74973002317bbef9620743c55806b907
  main35 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main27
                   Main.main26
                   Main.main24
                   Main.main23
                   Main.main37
                   Main.main23
                   Main.main36) -}
348c8351c567298de5db6239896ff6d0
  main36 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 37#) -}
37bdec15cb553e8349dcd04f95529145
  main37 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
20210cc1a69fcc523b4f588c19183078
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main39) -}
82f776047ba7d682061ed0f8b5c468b9
  main39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
2ea3799f475ab3ee3d5b00468132bc2c
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main64
                   Main.main62
                   Main.main11
                   Main.main5
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
d8fde7f14ce2954092a2d0aa7a196d01
  main40 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (Test.Hspec.Core.Tree.specGroup19 Main.main41) -}
5ffb0d7e825ee3e2c0eb175d6162cb7e
  main41 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.specGroup15
                   Main.main42) -}
4b35e2275b712b81154ec9d0a3cecf25
  main42 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specGroup13
                   Test.Hspec.Core.Tree.specItem9
                   Main.main43) -}
d99076b3157f03b064192e9579b1b040
  main43 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem7
                   Test.Hspec.Core.Tree.specItem3
                   Main.main33) -}
f7c3c8e0cec7197a085fa78e081755f1
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main45) -}
ef0a04e2f1dd3e17c5d0cdb378c0aa34
  main45 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("exercism"#) -}
b75cdad5143d29ba7b50fbc9c276b2ca
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main47) -}
cb088c5ad6599ad8f0d5ead242bbccab
  main47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vc vix    r hn"#) -}
9c00b8fb0544ed3ec0153a7bb53c681e
  main48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main49) -}
af6fae8fbaab3ae1347b4845bd9cc1da
  main49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("decode with too many spaces"#) -}
9388e115de5869c5b6ce25ff37155ac4
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main60
                   Main.main58
                   Main.main56
                   Main.main6
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
764638468bf9a5801cb3f6c327df23cb
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main51) -}
538e11654a4c866032b69d2e0f3f8461
  main51 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("thequickbrownfoxjumpsoverthelazydog"#) -}
e1458121d5c1d031f6c70e06208b7c79
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main53) -}
b157950842dd52303e4c77fce86e682a
  main53 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("gsvjf rxpyi ldmul cqfnk hlevi gsvoz abwlt"#) -}
16780889029d012bbc0bf396ce64a7c3
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main55) -}
7ac4b2ff650b0f7ca8b24f11304ff6a1
  main55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("decode all the letters"#) -}
b60854633ee1e94da44146242cfefc4f
  main56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main57) -}
3d8dd8b2b1e8979447c18534365a6a41
  main57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("testing123testing"#) -}
34f37406b872269eb03a70f0e4b33ee8
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main59) -}
5902da55fe3b0c669f9ea1f5aa4a4a67
  main59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("gvhgr mt123 gvhgr mt"#) -}
4f95dcd4dff248a19d20288219ebf0bd
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main54
                   Main.main52
                   Main.main50
                   Main.main7
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
0a01af5ae2b3103af3e793ea7151a71d
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main61) -}
ec780bd8ca6dbfabfd9d91ed3327718e
  main61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("decode numbers"#) -}
4391e49bf5dc8c62f571f0d8e08a226d
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main63) -}
db9ef9061d3b2ca4e21730a6fd87a6e1
  main63 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("zmlyh gzxov rhlug vmzhg vkkrm thglm v"#) -}
ce373e3751e9e3289a6a4c1ae625c288
  main64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main65) -}
a66a5d40beef92467d22fcb8309db854
  main65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("decode a sentence"#) -}
ce37504821b2936f60c874ae94f13c82
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main67) -}
573e11afa25593fe94413d2b7db1a13b
  main67 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vcvix rhn"#) -}
258595daa9c5defbc76cc89365dd35e7
  main68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main69) -}
5c2957bc3562f4976af3ba3db907facd
  main69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("decode exercism"#) -}
d5047af32a015fefecb30df0b59f77c0
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main48
                   Main.main46
                   Main.main44
                   Main.main8
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
71ad17166154ff113f7898ef3af183e6
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main71) -}
8330745109b492c60ea7550c3400311b
  main71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("decode"#) -}
bf48593641b0e73d25db1c5a05196418
  main72 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main73
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
e2b57431c72a4a9791f0f6b7ff575739
  main73 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main78
                   Main.main74
                   GHC.Stack.Types.EmptyCallStack) -}
490233b7d8741e679a604a98333b3648
  main74 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main27
                   Main.main26
                   Main.main24
                   Main.main77
                   Main.main76
                   Main.main77
                   Main.main75) -}
d2f3c35d81c004d95da5f0888acbf445
  main75 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 28#) -}
03eeac070c57e31da2a4c62086aa21f4
  main76 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
1902448b2c24d278be0bdc36136c9568
  main77 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 15#) -}
3bb3745f1125a7dcfa975883fe713934
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main79) -}
2666af16148645403e359a3cbf4f287e
  main79 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
68b5ea397fc81aa19154fe99bb253548
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main15
                   Main.main13
                   Main.main11
                   Main.main9
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
a78feacaa6b5c2cc9654171703b588f3
  main80 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wc1
                   Main.main128
                   Main.main126
                   Main.main124
                   Main.main81
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
aed7ea6d168f5aade19a203cd82230cc
  main81 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main122
                   Main.main120
                   Main.main118
                   Main.main82
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
acc0dd6bfc0e0f54121ca4fb7db95b3f
  main82 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main116
                   Main.main114
                   Main.main108
                   Main.main83
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
c71fe2159e960eb52b20cf0f8690beed
  main83 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main112
                   Main.main110
                   Main.main108
                   Main.main84
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
7957add95a759ed3982c8d20c7d217e1
  main84 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main106
                   Main.main104
                   Main.main102
                   Main.main85
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
54576b51ab8cfbc61845a15ca175db61
  main85 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main100
                   Main.main98
                   Main.main58
                   Main.main86
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
ce75eff4f345df8284910f25084b1d36
  main86 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main96
                   Main.main94
                   Main.main92
                   Main.main87
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
f86dfac427fcf423f46f8ee5e2a4a53d
  main87 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc1
                   Main.main90
                   Main.main88
                   Main.main52
                   Main.main9
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
166f775b930c46082e678bfa70e14871
  main88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main89) -}
ff7574a2f71e4c2e9734e44ad5e0291c
  main89 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("The quick brown fox jumps over the lazy dog."#) -}
d9c483a135194ec049b852eaa244f74b
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main10 #)) -}
c066e57e6e6d2b13a22b9e0810346818
  main90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main91) -}
b16a464603b93939fc41d2ee1b55f5b0
  main91 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode all the letters"#) -}
6fdb824de3d67e95f6b10ec4912f5680
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main93) -}
17c653acd82e64b39296d072f26ce347
  main93 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("gifgs rhurx grlm"#) -}
23460cd0c3e0a4e1f7861c253e322b19
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main95) -}
4d16fc4f9b13275b6b75f6832a5772ac
  main95 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Truth is fiction."#) -}
9a33a104e5638c83212078561a270e26
  main96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main97) -}
9a292fc084666288fc02e15cfbc16746
  main97 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("encode deep thought"#) -}
ea17bd40d8f951e9f16afbf2e134399c
  main98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main99) -}
0b6f1b3fba0fdf6c7febc0216c4943da
  main99 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Testing,1 2 3, testing."#) -}
f75834b2ff871c4af8aced19101ccd0e
  phrase :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

