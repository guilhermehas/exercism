
==================== FINAL INTERFACE ====================
2019-03-08 14:24:14.00941043 UTC

interface bowling-1.2.0.7-GAuXFAp1yaB8qz9NpkAty8:Bowling 8043
  interface hash: 38722e055a5b7f10f0ef7d3ad802392b
  ABI hash: 2a748b25367e4022f121b22a8188bc19
  export-list hash: fd525a7c64eac2499b8abb8a95da69b5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1f596daf84c7527444ae092b33472386
  opt_hash: 45d5e266c9ab751696f96731a7429711
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Bowling.score
  Bowling.BowlingError{Bowling.IncompleteGame Bowling.InvalidRoll rollIndex rollValue}
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
b4613e0baeb39fc8f325102ad5d99fe7
  $fEqBowlingError :: GHC.Classes.Eq Bowling.BowlingError
  DFunId
b4613e0baeb39fc8f325102ad5d99fe7
  $fShowBowlingError :: GHC.Show.Show Bowling.BowlingError
  DFunId
966a87751530a48db553dc2dfd7a144f
  $tc'IncompleteGame :: GHC.Types.TyCon
05065a093a14807727fd5a29ddaa41d9
  $tc'InvalidRoll :: GHC.Types.TyCon
547ddcb74c306f954d007a028892e8ad
  $tcBowlingError :: GHC.Types.TyCon
c3101f980beaf7f94146c538f6abe02f
  $trModule :: GHC.Types.Module
b4613e0baeb39fc8f325102ad5d99fe7
  data BowlingError
    = IncompleteGame
    | InvalidRoll {rollIndex :: GHC.Types.Int,
                   rollValue :: GHC.Types.Int}
b4613e0baeb39fc8f325102ad5d99fe7
  rollIndex :: Bowling.BowlingError -> GHC.Types.Int
  RecSel Left Bowling.BowlingError
b4613e0baeb39fc8f325102ad5d99fe7
  rollValue :: Bowling.BowlingError -> GHC.Types.Int
  RecSel Left Bowling.BowlingError
533d7ced6c047c40a74cc93b13174031
  score ::
    [GHC.Types.Int]
    -> Data.Either.Either Bowling.BowlingError GHC.Types.Int
instance [safe] GHC.Classes.Eq [Bowling.BowlingError]
  = Bowling.$fEqBowlingError
instance [safe] GHC.Show.Show [Bowling.BowlingError]
  = Bowling.$fShowBowlingError
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

