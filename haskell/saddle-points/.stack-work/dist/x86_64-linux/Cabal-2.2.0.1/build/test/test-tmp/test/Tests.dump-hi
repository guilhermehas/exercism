
==================== FINAL INTERFACE ====================
2019-01-16 01:29:34.985795484 UTC

interface main:Main 8043
  interface hash: 4938313b7964156714f2fe7d62b54574
  ABI hash: 7ef723158c99120a65521796c0cdb7bc
  export-list hash: bc1a0be0c0389bfa6d140e836e6568e2
  orphan hash: 4440b362c9ccc75bc73e3efb0d721b1a
  flag hash: f239a81c1f7b0cf85b3b31a2e2328647
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3
                      ansi-terminal-0.8.0.4 array-0.5.2.0 base-4.11.1.0 call-stack-0.1.0
                      clock-0.7.2 colour-2.3.4 containers-0.5.11.0 deepseq-1.4.3.0
                      directory-1.3.1.5 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hspec-2.5.5 hspec-core-2.5.5 hspec-expectations-0.8.2
                      integer-gmp-1.0.2.0 pretty-1.1.3.6 primitive-0.6.3.0
                      quickcheck-io-0.2.0 random-1.1 saddle-points-1.3.0.7 setenv-0.1.1.3
                      stm-2.4.5.0 template-haskell-2.13.0.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.5.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.5.0:Control.Monad.STM base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  array-0.5.2.0:Data.Array bfee801ad06ff76eb68c9cfdd261cdd6
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Arr d23cf0c05ccc71fede1c7a517b85126a
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hspec-2.5.5:Test.Hspec 2be16cf670d31c941cf3c2e9020b9f19
import  -/  hspec-2.5.5:Test.Hspec.Runner fc3975763ef747ba5b312af6c0fa997c
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Config.Options 46e8473cd69d1d02b94a5aff383c0b5a
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Runner 05e438b360ed244fedd330a757c1204b
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec c05383235153ad38308e55e581976171
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad eabb239f4fb08d8c7ff65e7e9206738b
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 713f0c8581412c4b3ae306dbada3ec4b
import  -/  saddle-points-1.3.0.7:Matrix 887ae9b4cf47aab564c8c917294f5b58
70fe008ecc420925c316daac7946fc07
  $s$fEq(,) :: GHC.Classes.Eq (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEqInt)
                  Main.$s$fEq(,)_$s$fEq(,)_$c/= -}
d9c29de69e24759049df94d820948480
  $s$fEq(,)_$s$fEq(,)_$c/= ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (GHC.Types.Int, GHC.Types.Int))
                   (y :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case GHC.Classes.eqInt a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.eqInt a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
35881f2124c034cf9600db7107eb46bf
  $s$fEq[] :: GHC.Classes.Eq [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [(GHC.Types.Int, GHC.Types.Int)]
                  (GHC.Classes.$fEq[]_$c==
                     @ (GHC.Types.Int, GHC.Types.Int)
                     Main.$s$fEq(,))
                  Main.$s$fEq[]_$s$fEq[]_$c/= -}
162ccaaddddb55689d54ea254cd563e3
  $s$fEq[]_$s$fEq[]_$c/= ::
    [(GHC.Types.Int, GHC.Types.Int)]
    -> [(GHC.Types.Int, GHC.Types.Int)] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [(GHC.Types.Int, GHC.Types.Int)])
                   (y :: [(GHC.Types.Int, GHC.Types.Int)]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (GHC.Types.Int, GHC.Types.Int)
                        Main.$s$fEq(,)
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7c4fcc93f69673d2b27fdc8eada75ea9
  $s$fShow[] :: GHC.Show.Show [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [(GHC.Types.Int, GHC.Types.Int)]
                  (\ (ds :: GHC.Types.Int)
                     (ls :: [(GHC.Types.Int, GHC.Types.Int)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Types.Int, GHC.Types.Int)
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        GHC.Show.$fShowInt
                        GHC.Show.$fShow(,)1)
                     ls
                     s)
                  (\ (x :: [(GHC.Types.Int, GHC.Types.Int)]) ->
                   GHC.Show.showList__
                     @ (GHC.Types.Int, GHC.Types.Int)
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        GHC.Show.$fShowInt
                        GHC.Show.$fShow(,)1)
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[(GHC.Types.Int, GHC.Types.Int)]])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [(GHC.Types.Int, GHC.Types.Int)]
                     (\ (ls1 :: [(GHC.Types.Int, GHC.Types.Int)])
                        (s1 :: GHC.Base.String)[OneShot] ->
                      GHC.Show.showList__
                        @ (GHC.Types.Int, GHC.Types.Int)
                        (GHC.Show.$fShow(,)_$cshowsPrec
                           @ GHC.Types.Int
                           @ GHC.Types.Int
                           GHC.Show.$fShowInt
                           GHC.Show.$fShowInt
                           GHC.Show.$fShow(,)1)
                        ls1
                        s1)
                     ls
                     s) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
9c25d75073fd477282d47c721f1ad734
  $wc ::
    [GHC.Types.Char]
    -> [[GHC.Types.Int]]
    -> [(GHC.Types.Int, GHC.Types.Int)]
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 5,
     Strictness: <L,1*U><L,U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: [GHC.Types.Char])
                   (ww1 :: [[GHC.Types.Int]])
                   (ww2 :: [(GHC.Types.Int, GHC.Types.Int)])
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                           <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                           <GHC.Types.IO>_R
                           <()>_N ; GHC.Types.N:IO[0]
                                        <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R)
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             (Test.Hspec.Core.Tree.Item
                                @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                                (case ww of wild {
                                   []
                                   -> case Main.main54 of wild1 {
                                        GHC.Base.Nothing -> Test.Hspec.Core.Tree.specItem1
                                        GHC.Base.Just v -> v }
                                   : ds2 ds3 -> wild })
                                Main.main43
                                (GHC.Base.Nothing @ GHC.Types.Bool)
                                (Test.Hspec.Core.Example.safeEvaluateExample1
                                   @ Test.Hspec.Expectations.Expectation
                                   Test.Hspec.Core.Example.$fExampleIO1
                                     `cast`
                                   ((<Test.Hspec.Expectations.Expectation>_R
                                     ->_R <Test.Hspec.Core.Example.Params>_R
                                     ->_R <(Test.Hspec.Core.Example.Arg
                                              Test.Hspec.Expectations.Expectation
                                            -> GHC.Types.IO ())
                                           -> GHC.Types.IO ()>_R
                                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                                   (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    Test.HUnit.Lang.assertEqual1
                                      @ [(GHC.Types.Int, GHC.Types.Int)]
                                      Main.main30
                                        `cast`
                                      (Sym (GHC.Classes.N:IP[0]
                                                <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                      Main.$s$fEq[]
                                      Main.$s$fShow[]
                                      (GHC.Types.[] @ GHC.Types.Char)
                                      ww2
                                      (case GHC.Magic.runRW#
                                              @ ('GHC.Types.TupleRep
                                                   '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                              @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   GHC.Arr.Array
                                                     (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int #)
                                              (\ (s1# :: GHC.Prim.State#
                                                           GHC.Prim.RealWorld)[OneShot] ->
                                               case GHC.List.$wlenAcc
                                                      @ [GHC.Types.Int]
                                                      ww1
                                                      0# of ww3 { DEFAULT ->
                                               let {
                                                 ww12 :: GHC.Prim.Int# = GHC.Prim.-# ww3 1#
                                               } in
                                               let {
                                                 u :: GHC.Types.Int
                                                 = case ww1 of wild {
                                                     []
                                                     -> case GHC.List.badHead
                                                        ret_ty GHC.Types.Int
                                                        of {}
                                                     : x ds2
                                                     -> case GHC.List.$wlenAcc
                                                               @ GHC.Types.Int
                                                               x
                                                               0# of ww4 { DEFAULT ->
                                                        GHC.Types.I# (GHC.Prim.-# ww4 1#) } }
                                               } in
                                               let {
                                                 $j :: GHC.Prim.Int#
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Arr.Array
                                                               (GHC.Types.Int, GHC.Types.Int)
                                                               GHC.Types.Int #)
                                                   <join 1> {- Arity: 1, Strictness: <S,U> -}
                                                 = \ (x :: GHC.Prim.Int#)[OneShot] ->
                                                   case GHC.Prim.<# x 0# of lwild {
                                                     DEFAULT
                                                     -> case GHC.Prim.newArray#
                                                               @ GHC.Types.Int
                                                               @ GHC.Prim.RealWorld
                                                               x
                                                               (GHC.Arr.arrEleBottom
                                                                  @ GHC.Types.Int)
                                                               s1# of ds2 { (#,#) ipv ipv1 ->
                                                        case x of wild {
                                                          DEFAULT
                                                          -> let {
                                                               $j1 :: GHC.Prim.State#
                                                                        GHC.Prim.RealWorld
                                                                      -> (# GHC.Prim.State#
                                                                              GHC.Prim.RealWorld,
                                                                            GHC.Arr.Array
                                                                              (GHC.Types.Int,
                                                                               GHC.Types.Int)
                                                                              GHC.Types.Int #)
                                                                 <join 1> {- Arity: 1,
                                                                             Strictness: <S,U> -}
                                                               = \ (wild4 :: GHC.Prim.State#
                                                                               GHC.Prim.RealWorld)[OneShot] ->
                                                                 case GHC.Prim.unsafeFreezeArray#
                                                                        @ GHC.Prim.RealWorld
                                                                        @ GHC.Types.Int
                                                                        ipv1
                                                                        wild4 of ds3 { (#,#) ipv4 ipv5 ->
                                                                 (# ipv4,
                                                                    GHC.Arr.Array
                                                                      @ (GHC.Types.Int,
                                                                         GHC.Types.Int)
                                                                      @ GHC.Types.Int
                                                                      Main.main_l
                                                                      (GHC.Types.I# ww12, u)
                                                                      wild
                                                                      ipv5 #) }
                                                             } in
                                                             letrec {
                                                               go :: [[GHC.Types.Int]]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Arr.Array
                                                                             (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                             GHC.Types.Int #)
                                                                 <join 3> {- Arity: 3,
                                                                             Strictness: <S,1*U><L,U><S,U> -}
                                                               = \ (ds :: [[GHC.Types.Int]])
                                                                   (eta :: GHC.Prim.Int#)
                                                                   (eta1 :: GHC.Prim.State#
                                                                              GHC.Prim.RealWorld) ->
                                                                 case ds of wild1 {
                                                                   [] -> $j1 eta1
                                                                   : y ys
                                                                   -> let {
                                                                        z :: GHC.Prim.Int#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Arr.Array
                                                                                     (GHC.Types.Int,
                                                                                      GHC.Types.Int)
                                                                                     GHC.Types.Int #)
                                                                          <join 2> {- Arity: 2,
                                                                                      Strictness: <S,U><S,U> -}
                                                                        = \ (eta3 :: GHC.Prim.Int#)[OneShot]
                                                                            (eta4 :: GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld)[OneShot] ->
                                                                          go ys eta3 eta4
                                                                      } in
                                                                      letrec {
                                                                        go1 :: [GHC.Types.Int]
                                                                               -> GHC.Prim.Int#
                                                                               -> GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                               -> (# GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld,
                                                                                     GHC.Arr.Array
                                                                                       (GHC.Types.Int,
                                                                                        GHC.Types.Int)
                                                                                       GHC.Types.Int #)
                                                                          <join 3> {- Arity: 3,
                                                                                      Strictness: <S,1*U><S,U><S,U> -}
                                                                        = \ (ds3 :: [GHC.Types.Int])
                                                                            (eta3 :: GHC.Prim.Int#)
                                                                            (eta4 :: GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld) ->
                                                                          case ds3 of wild2 {
                                                                            [] -> z eta3 eta4
                                                                            : y1 ys1
                                                                            -> case GHC.Prim.writeArray#
                                                                                      @ GHC.Prim.RealWorld
                                                                                      @ GHC.Types.Int
                                                                                      ipv1
                                                                                      eta3
                                                                                      y1
                                                                                      eta4 of s4# { DEFAULT ->
                                                                               case GHC.Prim.==#
                                                                                      eta3
                                                                                      (GHC.Prim.-#
                                                                                         wild
                                                                                         1#) of lwild1 {
                                                                                 DEFAULT
                                                                                 -> go1
                                                                                      ys1
                                                                                      (GHC.Prim.+#
                                                                                         eta3
                                                                                         1#)
                                                                                      s4#
                                                                                 1# -> $j1 s4# } } }
                                                                      } in
                                                                      go1 y eta eta1 }
                                                             } in
                                                             go ww1 0# ipv
                                                          0#
                                                          -> case GHC.Prim.unsafeFreezeArray#
                                                                    @ GHC.Prim.RealWorld
                                                                    @ GHC.Types.Int
                                                                    ipv1
                                                                    ipv of ds3 { (#,#) ipv4 ipv5 ->
                                                             (# ipv4,
                                                                GHC.Arr.Array
                                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                                  @ GHC.Types.Int
                                                                  Main.main_l
                                                                  (GHC.Types.I# ww12, u)
                                                                  0#
                                                                  ipv5 #) } } }
                                                     1#
                                                     -> case GHC.Arr.negRange
                                                        ret_ty (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld,
                                                                  GHC.Arr.Array
                                                                    (GHC.Types.Int, GHC.Types.Int)
                                                                    GHC.Types.Int #)
                                                        of {} }
                                               } in
                                               case GHC.Prim.<=# 0# ww12 of lwild {
                                                 DEFAULT -> $j 0#
                                                 1#
                                                 -> case u of wild1 { GHC.Types.I# n ->
                                                    case GHC.Prim.<=# 0# n of lwild1 {
                                                      DEFAULT -> $j 0#
                                                      1#
                                                      -> $j
                                                           (GHC.Prim.+#
                                                              (GHC.Prim.+#
                                                                 (GHC.Prim.*#
                                                                    ww12
                                                                    (GHC.Prim.+# n 1#))
                                                                 n)
                                                              1#) } } } }) of ds2 { (#,#) ipv ipv1 ->
                                       Matrix.saddlePoints ipv1 })
                                      eta2)
                                     `cast`
                                   (Sym (GHC.Types.N:IO[0] <()>_R)))
                                  `cast`
                                (<Test.Hspec.Core.Example.Params>_R
                                 ->_R <Test.Hspec.Core.Example.ActionWith
                                         (Test.Hspec.Core.Example.Arg
                                            Test.Hspec.Expectations.Expectation)
                                       -> GHC.Types.IO ()>_R
                                 ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))))
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
0c9e3dccf005d31a7009ec320c0c3b8d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
24790b3fcbe0f7edefa1e35834da382a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main168
                        Main.main2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
21a2952e758e6fc088516490d446ad52
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main70
                   Main.main62
                   Main.main58
                   Main.main11
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
2869ce974372641920da4bbc53c6b0b4
  main100 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
68b7b0921b28baa9a36e91d61fa8c062
  main101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main102) -}
2d0bac74328807a3ea819d78eb4a7ba0
  main102 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bottom-right corner"#) -}
3b758a0f1f246541096c6c34d221b1e8
  main103 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main61
                   Main.main104) -}
9465dbaedacb0d32fa9012fecb6e0f96
  main104 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main107
                   Main.main105) -}
f275dffc84c6af94bd48b7dbcccfcdc2
  main105 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main106
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))) -}
513128d17e05e45781582e003dc87fdb
  main106 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main20, Main.main27)) -}
6e35406367877ddffdd12c38a291331c
  main107 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main20, Main.main20)) -}
566eeee9f9f9bb957df8f37af2dc0481
  main108 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main115
                   Main.main109) -}
b2d3f6c8bac5bbe25a0a246dc5de8a02
  main109 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main113
                   Main.main110) -}
ad166f1b85cfe044da88616bf85fd4c5
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main28
                   Main.main21
                   Main.main14
                   Main.main12
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
7aa03428161f9493752dfc0535969daf
  main110 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main111
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
68e477718624c3d3a94223e8ae0ae249
  main111 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main95
                   Main.main112) -}
081ef8d5b369898813aac9b444b2a562
  main112 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main26 Main.main93) -}
7795ed8b811307b70b88134e186bfd5e
  main113 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main26
                   Main.main114) -}
6420057209286f263e5bb1570599faef
  main114 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main26 Main.main25) -}
2840ace3b668945ac7c2244a3173bb7e
  main115 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main94
                   Main.main116) -}
a1136c6be15572f2bd6f757712cc3e2c
  main116 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main95
                   Main.main117) -}
06e9972b1fa54722ef8c5fd8675adab9
  main117 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main100
                   (GHC.Types.[] @ GHC.Types.Int)) -}
42932e42a7069590c6a8db4be9ce0787
  main118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main119) -}
4c82134ecac47192bea5ef7d771b3753
  main119 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("multiple saddle points in a row"#) -}
dc62e7be31206ba1c5ed702f88564f29
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main13 #)) -}
081f5ab816aa88705569f822a0b0a1fb
  main120 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main19
                   Main.main121) -}
b9becbf0bda720f384b3bd8e3d96ca5f
  main121 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main107
                   Main.main122) -}
8631734c14d2ded883f2ddb8ae971b9a
  main122 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main123
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))) -}
ee5514b58ae77ad4d0e12dcbac981437
  main123 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main27, Main.main20)) -}
2fffc4db6571793c0446d6b693bd1bc2
  main124 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main130
                   Main.main125) -}
3455a911cacd44125fc3c122db9197ae
  main125 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main129
                   Main.main126) -}
2ad71a58518096c433bb801f4bc8d86b
  main126 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main127
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
b24144edc1b6030877a056f165418158
  main127 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main20
                   Main.main128) -}
3b4f03e02c2ea670a4cc956586e1bcd5
  main128 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main26 Main.main67) -}
1b01a6ba07d9a00f2152572d419f8668
  main129 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main17
                   Main.main114) -}
24152c98a25aee4159149445e626e9fc
  main13 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
a531bcc5de8d5994fcae116ed9bacd88
  main130 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main68
                   Main.main128) -}
28987cb51807de3547ec2062dafc7c78
  main131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main132) -}
dc473b181641e378e5916ea14428dac0
  main132 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("multiple saddle points in a column"#) -}
a46cb600ce7743fd6874e6195cadb706
  main133 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main140
                   Main.main134) -}
41501b0d268236f7be4ef655cf54fd02
  main134 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main138
                   Main.main135) -}
d82e33529687db4cf393d50e6f4f167f
  main135 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main136
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
9053bc70b625246dc2d455d9f9e5df38
  main136 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main27
                   Main.main137) -}
c73192f30c59b9017ad2b135856e71b6
  main137 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main17 Main.main66) -}
8c8198f12a826d207d909d122919d44c
  main138 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main17
                   Main.main139) -}
733035acc0ac43550cad48a158290689
  main139 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main20 Main.main69) -}
9aca102ff6e47027e4815e6f7e2bcecd
  main14 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main19
                   Main.main15) -}
7a665a9037a03d11b462f2e365450a83
  main140 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main20
                   Main.main141) -}
3a1f79b99038d474e3859bb7097b0eb8
  main141 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main27 Main.main81) -}
1d81a476dcc1b90c1b4f5004c4e817b3
  main142 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main143) -}
ce13c805255d14d1ec109f6ac5612a45
  main143 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("no saddle point"#) -}
225f0e63320a8dc51ee075b76a75d515
  main144 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main145) -}
cd25dc9c4bcaff7b45aa6d10396eef36
  main145 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("empty matrix has none"#) -}
5f29586891d189db2e02b18cfe0e1df7
  main146 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main61
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))) -}
5c487e18b91e6190f40f94d258320eb4
  main147 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main155
                   Main.main148) -}
5dbc61dc3e2d13c913c3fb00b8429e98
  main148 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main153
                   Main.main149) -}
631b1d9edf70d89ea6566e50c8dad551
  main149 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main150
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
38f1db82f97c50be8b84280097c6cf7d
  main15 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main16
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))) -}
85f766edbdb7d3ff97e65b9b7efd633a
  main150 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main94
                   Main.main151) -}
53ab916a0cabfa739ab252ac0833b074
  main151 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main94
                   Main.main152) -}
fd712b6f8282a526c8b27191b647d96b
  main152 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main95
                   (GHC.Types.[] @ GHC.Types.Int)) -}
b34bf8ab7f5b1a6314fa314601fe8044
  main153 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main26
                   Main.main154) -}
d564ed03f00b596e9d66481bde465e70
  main154 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main17 Main.main69) -}
7ccd11516359c6d1b16083699edeb9d1
  main155 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main99
                   Main.main156) -}
f49c8e7a5496712f7f1446b97485110b
  main156 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main100
                   Main.main152) -}
1f9fb5bf736ce02b4fb6df6c6bbd6518
  main157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main158) -}
72d99be78d854c93fd45ffaa0c925ad7
  main158 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Example from README"#) -}
61c15f1cd1f9690530bcd14755180eb4
  main159 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main160) -}
12f203b66aab3e4dacb62fa63678412e
  main16 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main18, Main.main17)) -}
6dd74d69adb8ed3a78da5bcf71c8034b
  main160 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("saddlePoints"#) -}
c25622244c12a0293557f512664e0833
  main161 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main162
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
bf87f907b20551426a80ba94afbf5595
  main162 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main166
                   Main.main163
                   GHC.Stack.Types.EmptyCallStack) -}
34324940aa7404f0fa43539c87a2db83
  main163 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main37
                   Main.main165
                   Main.main99
                   Main.main165
                   Main.main164) -}
fdaeb3c80af17c1dd13a78f0c31306a2
  main164 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 32#) -}
3cdb6c8181fb1d289e3f8db1bf593d59
  main165 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
904c8935f09dad98f7efc97b23eb3507
  main166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main167) -}
5adbdf7a8d2a04d22dbaf374c370e262
  main167 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
4914b9fe297ae983b33a74d63d329b5f
  main168 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
5c39b7f2b3f9ad25307fb16d86328c7e
  main169 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
75075ce7d051f4848ebf60b7dd254242
  main17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
8bb2d4d9f34d74289b9dab4e44e5ab59
  main18 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
de42d8a2a8eabcf80b6a5da09a0dfca3
  main19 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main18, Main.main20)) -}
562d1a2ce33abeeb9fea2c3c0c8d0fbb
  main2 :: Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Main.main161
                   Main.main159
                   Main.main3
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                       <GHC.Types.IO>_R
                                                       <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N) <()>_N))) -}
78abff08e9b6812fc116b7c732201a38
  main20 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
48c98aabaf1afa7c5447d3d85dd99396
  main21 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main22
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
5d31263e5124d70efa74d862a2c96ae0
  main22 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main27 Main.main23) -}
f873f5ea59ef4b865508ac739fc68f48
  main23 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main26 Main.main24) -}
747bd594bc9724d89a1f1421f51618f4
  main24 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main17 Main.main25) -}
cc373db3e6e775ba1355bb094941c18d
  main25 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main26
                   (GHC.Types.[] @ GHC.Types.Int)) -}
2bad932040daa3347438966293ca56f9
  main26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
7bcd2b82d4aeb06794ab40323c60bc42
  main27 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
5bb1fb960f3523a49466c1edac2d5b92
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main29) -}
0eb9d8685661f0d083dc36c41b46221b
  main29 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Can identify that saddle points in a single row matrix are those with the maximum value"#) -}
99db4e55eab31ff7d369aa29c842a10e
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wc
                   Main.main157
                   Main.main147
                   Main.main146
                   Main.main4
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
214dceb5d9f4e0c773deec024a5cc62f
  main30 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?6
                   Test.HUnit.Base.@?=2
                   Main.main31) -}
de5aafa963557629dd982221582dc260
  main31 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe6
                   Test.Hspec.Expectations.shouldBe2
                   Main.main32) -}
58988ca2a5f27486ff65386556ccc07e
  main32 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main33
                   GHC.Stack.Types.EmptyCallStack) -}
7c476a1b96a0afd5428a0d34f799536a
  main33 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main37
                   Main.main36
                   Main.main35
                   Main.main36
                   Main.main34) -}
d97eec5c8f0ffc9b358096a3d4993bbd
  main34 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 60#) -}
dd3204d104d3b92f7a6f09ac3b6555a7
  main35 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
6207d57de801babbe1eb3d2538c1d3da
  main36 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 19#) -}
082a132a5f1cd33885994715482b4e49
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main38) -}
759610ba435886b5dcad6e3265d7f334
  main38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
4243f475ee1fa14f8ad672ea7480a74a
  main39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
569d1cba43b4db1db7fbeefd3fa3eb26
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main144
                   (GHC.Types.[] @ [GHC.Types.Int])
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))
                   Main.main5
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
e99a05e53f46f649eade686ab45a2986
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
ad9a6b85218c39cf3bc39e4a40ef8a4c
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main42) -}
931758a2669bfe28cd4b78e05b84b72a
  main42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shouldBe"#) -}
2fc126c541e89dd4331bfcb53d1021ba
  main43 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main44) -}
a77d5b54312518be3a82dad3288728e6
  main44 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main45) -}
655865f4be6dc92951ca2d87d41a1659
  main45 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main46) -}
fbdb4e9301c43ff390f5b13020cbec7a
  main46 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main47) -}
7126f046e05eda70819d09fb328af723
  main47 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main48
                   GHC.Stack.Types.EmptyCallStack) -}
b9c5ae0daa92f4395b3960c5fbb20745
  main48 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main40
                   Main.main39
                   Main.main37
                   Main.main51
                   Main.main50
                   Main.main51
                   Main.main49) -}
b92c69d24511ff3ff5c961087705ec60
  main49 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 65#) -}
1d6e8a08bab2d6fe6101953262ad6456
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main142
                   Main.main133
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))
                   Main.main6
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
6b0ab7295cc68edf2f20207099590e37
  main50 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 41#) -}
2f8f3a0d31c482b540f8153595f7e400
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
2d6df9683ec9c38a1d0dca8b1534621b
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main53) -}
c890bebd21c6419a762267e1d45b181a
  main53 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
a8b96525be1982e76705d73d8cb25a3a
  main54 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (Test.Hspec.Core.Tree.specGroup19 Main.main55) -}
1e0a11a838513b99114011cac2edf20d
  main55 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.specGroup15
                   Main.main56) -}
73417bb642dc3834e600b510c2b111df
  main56 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specGroup13
                   Test.Hspec.Core.Tree.specItem9
                   Main.main57) -}
74757c530d11f15d06422681562fa569
  main57 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem7
                   Test.Hspec.Core.Tree.specItem3
                   Main.main46) -}
ca97d1329abb47d337b31d39b66927e6
  main58 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main61
                   Main.main59) -}
e31b0bfc26474f90582e6a2ca2fd2ed3
  main59 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main60
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))) -}
128afec379cf5a3a72c685965c28cff8
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main131
                   Main.main124
                   Main.main120
                   Main.main7
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
c4c571f16ad77650d05f79eb7107b51f
  main60 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main17, Main.main18)) -}
7f868731cc4c73d7ee02e780f04109cd
  main61 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main20, Main.main18)) -}
05386ae873d63a589c688bebddddad17
  main62 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main69
                   Main.main63) -}
040ef97f90584f2c68b93d15f1551e65
  main63 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main66
                   Main.main64) -}
1d4bdf125ad59e0d5ec7e6b6d37771fa
  main64 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main67
                   Main.main65) -}
b68b3fa4b8871f4926a18b49af442987
  main65 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main66
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
4d3a907f3d8fbde7d764f918706fcd01
  main66 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main20
                   (GHC.Types.[] @ GHC.Types.Int)) -}
1166e68f517a1cf54f088548579c9480
  main67 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main68
                   (GHC.Types.[] @ GHC.Types.Int)) -}
2dda9169993aa1b4605aefa748b07aea
  main68 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
6ba3ea5b80bc8dfb4a68b88db4435927
  main69 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main27
                   (GHC.Types.[] @ GHC.Types.Int)) -}
743d23bad865b74704f83f6b83f0b763
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main118
                   Main.main108
                   Main.main103
                   Main.main8
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
b5b7d52fc957fb83ef986568b84c6653
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main71) -}
2b73e01ae2aa0bb65f5a4f1396635410
  main71 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Can identify that saddle points in a single column matrix are those with the minimum value"#) -}
37131842b983ef98cf4615a92eb639ac
  main72 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main_l
                   Main.main73) -}
856152f31caddb7f57e7b1866e53ea79
  main73 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main74
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))) -}
2ba6aa99e094ec711d7b9484c5469aca
  main74 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main18, Main.main27)) -}
7af79a29ece84a48ce5b721c33c52430
  main75 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main79
                   Main.main76) -}
64a764c63c6c6736c0e67297ec232a81
  main76 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main77
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
16ef94ce9dc915e0ae4f3d1539484b6d
  main77 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main17 Main.main78) -}
90572900977b6fe87b204c0d418ddaa5
  main78 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main27 Main.main67) -}
4e2b85497af04fb78550bd6fdb2a4862
  main79 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main17 Main.main80) -}
a69c6572d38f4ef07c7086a1fd81985e
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main101
                   Main.main86
                   Main.main84
                   Main.main9
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
25579cde5fbe204db19a4a65e3ade9ac
  main80 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main20 Main.main81) -}
3d41a5e94f53416c6638d3e3389d9c9d
  main81 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main17
                   (GHC.Types.[] @ GHC.Types.Int)) -}
90d510714ec74a9dd3a8db8ee0f8c5bd
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main83) -}
3d580a907d4f191680c668dd5cd12935
  main83 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("non-square matrix"#) -}
247cffecd1b6b73027e0bb252798c095
  main84 :: [(GHC.Types.Int, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Main.main85
                   (GHC.Types.[] @ (GHC.Types.Int, GHC.Types.Int))) -}
4b65a547c21daf7b42d34b92dbfd0aeb
  main85 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main27, Main.main27)) -}
b61fb0801b7893f3b093c94d8ab46bfe
  main86 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main96
                   Main.main87) -}
70be5b339cee8997fcf61aa08a181696
  main87 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main91
                   Main.main88) -}
d7240023a868e897b3c6e8096fd7f17d
  main88 :: [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Main.main89
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
508784a71fc327584bf3a64c0e5f2466
  main89 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main17 Main.main90) -}
4ea1d7dfa139bf2ce2950a1d9784b309
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main82
                   Main.main75
                   Main.main72
                   Main.main10
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
38ce84b6ee6891102d304d982656734b
  main90 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main27 Main.main25) -}
f9c4f44871a33db04b8b98472fe74428
  main91 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main94 Main.main92) -}
e4ce2f22767b8a6c61908feb238911e0
  main92 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main95 Main.main93) -}
d77ae84d4123d8cbdb492b7584c282ec
  main93 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main94
                   (GHC.Types.[] @ GHC.Types.Int)) -}
fd41c8ba9b5fe6717c2fd6d5ce92d22d
  main94 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
30afaa5ea9eff50254eeca437c714628
  main95 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
41bb4a331df56df0801b168d7c31a827
  main96 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main100
                   Main.main97) -}
03d5c188a84e620485d74a1368d1cc7a
  main97 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main95 Main.main98) -}
76242f997a86453725b062b476b4d923
  main98 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main99
                   (GHC.Types.[] @ GHC.Types.Int)) -}
bf8c5e212f521b16a7cab574ab9509de
  main99 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
b6cd21229777730591baf6aae393fb55
  main_l :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main18, Main.main18)) -}
"SPEC/Main $fEq(,) @ Int @ Int" [orphan] forall (v1 :: GHC.Classes.Eq
                                                         GHC.Types.Int)
                                                (v :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,) @ GHC.Types.Int @ GHC.Types.Int v v1
  = Main.$s$fEq(,)
"SPEC/Main $fEq(,)_$c/= @ Int @ Int" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                 GHC.Types.Int)
                                                     ($dEq :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,)_$c/= @ GHC.Types.Int @ GHC.Types.Int $dEq $dEq1
  = Main.$s$fEq(,)_$s$fEq(,)_$c/=
"SPEC/Main $fEq[] @ (Int, Int)" [orphan] forall (v :: GHC.Classes.Eq
                                                        (GHC.Types.Int, GHC.Types.Int))
  GHC.Classes.$fEq[] @ (GHC.Types.Int, GHC.Types.Int) v
  = Main.$s$fEq[]
"SPEC/Main $fEq[]_$c/= @ (Int, Int)" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                (GHC.Types.Int, GHC.Types.Int))
  GHC.Classes.$fEq[]_$c/= @ (GHC.Types.Int, GHC.Types.Int) $dEq
  = Main.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Main $fShow[] @ (Int, Int)" [orphan] forall (v :: GHC.Show.Show
                                                          (GHC.Types.Int, GHC.Types.Int))
  GHC.Show.$fShow[] @ (GHC.Types.Int, GHC.Types.Int) v
  = Main.$s$fShow[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

