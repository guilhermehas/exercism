
==================== FINAL INTERFACE ====================
2019-01-12 22:17:27.452698909 UTC

interface simple-linked-list-0.1.0.3-8e7UNcB5oiOLB4mCJZxU8z:LinkedList 8043
  interface hash: 53750e5836aac2151f5bb63a3b0b3477
  ABI hash: f58c5de16cdd4f7b901d3c57909f0856
  export-list hash: 502c8b841cd9f48b01985cfad6ea101c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1f596daf84c7527444ae092b33472386
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  LinkedList.datum
  LinkedList.fromList
  LinkedList.isNil
  LinkedList.new
  LinkedList.next
  LinkedList.nil
  LinkedList.reverseLinkedList
  LinkedList.toList
  LinkedList.LinkedList
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
bdb8a0930622e669ff695573dc7593fe
  $fEqLinkedList ::
    GHC.Classes.Eq a => GHC.Classes.Eq (LinkedList.LinkedList a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a).
                  @ (LinkedList.LinkedList a)
                  (LinkedList.$fEqLinkedList_$c== @ a v)
                  (LinkedList.$fEqLinkedList_$c/= @ a v) -}
bdb8a0930622e669ff695573dc7593fe
  $fEqLinkedList_$c/= ::
    GHC.Classes.Eq a =>
    LinkedList.LinkedList a
    -> LinkedList.LinkedList a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U>, Inline: (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x :: LinkedList.LinkedList a)
                   (y :: LinkedList.LinkedList a) ->
                 case LinkedList.$fEqLinkedList_$c== @ a $dEq x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
bdb8a0930622e669ff695573dc7593fe
  $fEqLinkedList_$c== ::
    GHC.Classes.Eq a =>
    LinkedList.LinkedList a
    -> LinkedList.LinkedList a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U> -}
bdb8a0930622e669ff695573dc7593fe
  $fShowLinkedList ::
    GHC.Show.Show a => GHC.Show.Show (LinkedList.LinkedList a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (LinkedList.LinkedList a)
                  (LinkedList.$fShowLinkedList_$cshowsPrec @ a v)
                  (LinkedList.$fShowLinkedList_$cshow @ a v)
                  (LinkedList.$fShowLinkedList_$cshowList @ a v) -}
bd5880181caaeea906e2cc2e3fdfb09e
  $fShowLinkedList1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
bdb8a0930622e669ff695573dc7593fe
  $fShowLinkedList_$cshow ::
    GHC.Show.Show a => LinkedList.LinkedList a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (x :: LinkedList.LinkedList a) ->
                 LinkedList.$fShowLinkedList_$cshowsPrec
                   @ a
                   $dShow
                   LinkedList.$fShowLinkedList1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
bdb8a0930622e669ff695573dc7593fe
  $fShowLinkedList_$cshowList ::
    GHC.Show.Show a => [LinkedList.LinkedList a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [LinkedList.LinkedList a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (LinkedList.LinkedList a)
                   (LinkedList.$fShowLinkedList_$cshowsPrec
                      @ a
                      $dShow
                      LinkedList.$fShowLinkedList1)
                   ls
                   s) -}
bdb8a0930622e669ff695573dc7593fe
  $fShowLinkedList_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> LinkedList.LinkedList a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><L,1*U(U)><S,1*U> -}
b8a30c432f14ddd2d8e04d8a962d070e
  $tc'Cons :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13904741601994301926##
                   1566035565371632614##
                   LinkedList.$trModule
                   LinkedList.$tc'Cons2
                   1#
                   LinkedList.$tc'Cons1) -}
4010876da7f63d80ef110fbd6c6cb623
  $tc'Cons1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d582d4ebc65b4ef1c9f2de6e02571f0b
  $tc'Cons2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$tc'Cons3) -}
9d905f0bac7f9ab048e9ae58103bfa44
  $tc'Cons3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Cons"#) -}
f1604212f028f35046c7d97e04439dc2
  $tc'Empty :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17445128194335228200##
                   1200173916729290565##
                   LinkedList.$trModule
                   LinkedList.$tc'Empty2
                   1#
                   LinkedList.$tc'Empty1) -}
967a5984d7eeec974e943693bd8752f5
  $tc'Empty1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
57264ecf00e9e570d412b3a1efd940ee
  $tc'Empty2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$tc'Empty3) -}
c1c3d86681de4a4f27f573b4cfb1a9e4
  $tc'Empty3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Empty"#) -}
2dcaa14bf87d7e78536baea39c3cdbdf
  $tcLinkedList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11221975697232500347##
                   8742152397403710344##
                   LinkedList.$trModule
                   LinkedList.$trModule1
                   0#
                   GHC.Types.krep$*Arr*) -}
dd1c51b6c215d135ee162db2ac03adc0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   LinkedList.$trModule3
                   LinkedList.$trModule1) -}
1c147fb3a12b0721af51f9bac54fa804
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$trModule2) -}
0b979973daba084670440ca49d016ff1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LinkedList"#) -}
4ae76c8461ffb82540c7e7204c4e0568
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$trModule4) -}
3443ce4b0ecb412debc25073d76a65e5
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("simple-linked-list-0.1.0.3-8e7UNcB5oiOLB4mCJZxU8z"#) -}
bdb8a0930622e669ff695573dc7593fe
  data LinkedList a = Cons a (LinkedList.LinkedList a) | Empty
65e017cb2fb5d90626ed3bf500ddf46a
  datum :: LinkedList.LinkedList a -> a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: LinkedList.LinkedList a) ->
                 case ds of wild {
                   LinkedList.Cons x ds1 -> x
                   LinkedList.Empty -> LinkedList.datum1 @ a }) -}
847c9ac286f08486f427f65b462415b9
  datum1 :: a
  {- Strictness: x -}
f1b4af2ac9e981f931f8db2a1a27b812
  fromList :: [a] -> LinkedList.LinkedList a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
c537f1a9f3e6ed9eee84fc548147fd07
  isNil :: LinkedList.LinkedList a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: LinkedList.LinkedList a) ->
                 case ds of wild {
                   LinkedList.Cons ipv ipv1 -> GHC.Types.False
                   LinkedList.Empty -> GHC.Types.True }) -}
6fda82cff10947da2c08f17230698e51
  new :: a -> LinkedList.LinkedList a -> LinkedList.LinkedList a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m1,
     Unfolding: InlineRule (0, True, True) LinkedList.Cons -}
e358f4452d49436d699f97ac3c4f14a2
  next :: LinkedList.LinkedList a -> LinkedList.LinkedList a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: LinkedList.LinkedList a) ->
                 case ds of wild {
                   LinkedList.Cons ds1 xs -> xs
                   LinkedList.Empty -> LinkedList.next1 @ a }) -}
0040bcb2a9afbe2555c879aab0975d7b
  next1 :: LinkedList.LinkedList a
  {- Strictness: x -}
c9d49736b8de287dd1981f7b4d727d09
  nil :: LinkedList.LinkedList a
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) LinkedList.Empty -}
97f8556a877c08d9baea3cc334b14922
  reverseLinkedList ::
    LinkedList.LinkedList a -> LinkedList.LinkedList a
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a ->
                 LinkedList.reverseLinkedListAcc @ a (LinkedList.Empty @ a)) -}
a8c17f5373b7a3a85aadb0c43ad7a076
  reverseLinkedListAcc ::
    LinkedList.LinkedList a
    -> LinkedList.LinkedList a -> LinkedList.LinkedList a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
a4de878bd5bc7683bfca0c5cce69a8c5
  toList :: LinkedList.LinkedList a -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
instance [safe] GHC.Classes.Eq [LinkedList.LinkedList]
  = LinkedList.$fEqLinkedList
instance [safe] GHC.Show.Show [LinkedList.LinkedList]
  = LinkedList.$fShowLinkedList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

